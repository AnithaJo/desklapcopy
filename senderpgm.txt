using System;
using RabbitMQ.Client;
using System.Text;

class Send
{
    private static string[] args;

    public static void Main(string[] args)
    {
        var factory = new ConnectionFactory() { HostName = "localhost" };
        using (var connection = factory.CreateConnection())
        using (var channel = connection.CreateModel())
        {
            channel.QueueDeclare(queue: "task_queue",
                                 durable: true,
                                 exclusive: false,
                                 autoDelete: false,
                                 arguments: null);


            var message = GetMessage(args);
            var body = Encoding.UTF8.GetBytes(message);

            var properties = channel.CreateBasicProperties();
            properties.Persistent = true;

           
                channel.BasicPublish(exchange: "",
                                     routingKey: "task_queue",
                                     basicProperties: properties,
                                     body: body);

                Console.WriteLine(" [x] Sent {0}", message);
            

        }

        Console.WriteLine(" Press [enter] to exit.");
        Console.ReadLine();
    }

    private static string GetMessage(string[] args)
    {
        //for (int i = 0; i < 10; i++)
        //{

        //    Console.WriteLine("Thread {0} consumes {1}", i, i);
        //}

        //return ((args.Length > 0) ? string.Join(" ", args) : "Hello World!");


        byte[] array = System.IO.File.ReadAllBytes("C:\\Users\\admin\\Desktop\\tesst.txt");
        // int arr = array.Length;
        var str = System.Text.Encoding.UTF8.GetString(array);
        //String s = array.ToString();
                return str;
        //return ((args.Length > 0) ? string.Join(" ", args) : "Hello World!");
    }
}